<?xml version="1.0" encoding="utf-8" ?>
<!-- Copyright (C) Microsoft Corporation. All rights reserved. -->
<UIX xmlns="http://schemas.microsoft.com/2007/uix"
  xmlns:sys="assembly://mscorlib/System"
  xmlns:isui="assembly://IrisShell/IrisShell.UI"
  xmlns:iris="assembly://UIX/Microsoft.Iris"
  xmlns:styles="res://UIXControls!Styles.uix"
  xmlns:istyles="clr-res://IrisShell!Controls.Styles.uix"
  xmlns:ianim="clr-res://IrisShell!Controls.Animations.uix"
  xmlns:page="clr-res://IrisShell!Controls.PageStack.uix"
  xmlns:toptoolbar="clr-res://ZuneModdingHelper!Controls.TopToolbar.uix"
  xmlns:popuplayer="res://UIXControls!PopupLayer.uix"
  xmlns:animations="res://UIXControls!Animations.uix"
  xmlns:nonclient="clr-res://ZuneModdingHelper!Controls.NonClientControls.uix"
  xmlns:focus="clr-res://IrisShell!Controls.FocusRect.uix">

  <!--
  xmlns:bottomtoolbar="clr-res://IrisShell!Controls.BottomToolbar.uix"
  xmlns:cnav="clr-res://IrisShell!Controls.CollectionNavigation.uix"
  xmlns:snav="clr-res://IrisShell!Controls.SocialNavigation.uix"
  -->

    <UI Name="Frame" Base="page:PageStack">
        <Properties>
            <isui:Shell Name="Shell" Shell="{(isui:Shell)isui:Shell.DefaultInstance}"/>
        </Properties>

        <Locals>
            <isui:DictionaryCommandHandler Name="ShellCommandHandlers">
                <Handlers>

                    <isui:CurrentPageCommandHandler Name="Page"/>

                    <!--<isui:DictionaryCommandHandler Name="Collection"
                      DictionaryCommandHandler="{cnav:Navigation.Root}"/>

                    <isui:DictionaryCommandHandler Name="Device"
                      DictionaryCommandHandler="{cnav:DeviceNavigation.Root}"/>

                    <isui:DictionaryCommandHandler Name="Social"
                      DictionaryCommandHandler="{snav:Navigation.Root}"/>-->

                    <!--<isui:WebUrlCommandHandler Name="Web"/>

                    <isui:HelpCommandHandler Name="Help"/>-->

                </Handlers>
            </isui:DictionaryCommandHandler>



            <AnchorLayoutInput Name="EnergyBarLayoutMax" Bottom="Parent,1" Left="Parent,0" Right="Parent,1,-1"/>
            <AnchorLayoutInput Name="EnergyBarLayoutNorm" Bottom="Parent,1" Left="Parent,0,1" Right="Grabber,0"/>

            <Int32 Name="MouseActivityTimeout" Int32="5000"/>

            <sys:Boolean Name="AutoHideToolbars"/>
            <Timer Name="KeyIdleTimer" Interval="{MouseActivityTimeout}" AutoRepeat="false" Enabled="false"/>
            <istyles:WindowState Name="WindowState"/>
        </Locals>

        <Input>

            <ClickHandler Name="MouseDown" ClickType="Mouse" HandlerTransition="Down" HandlerStage="Routed" Handle="false"/>


            <KeyHandler Name="CancelSettings" Key="Escape" DisallowedModifiers="Alt,Shift,Windows,Ctrl" HandlerStage="Bubbled" />
            
            <KeyHandler Name="KeyHandlerHelp"          Key="F1" DisallowedModifiers="Alt,Shift,Ctrl,Windows" HandlerStage="Bubbled"/>
            <!--<KeyHandler Name="KeyHandlerSearchFocus"   Key="E"  RequiredModifiers="Ctrl" DisallowedModifiers="Alt,Shift,Windows" HandlerStage="Bubbled" Command="{isui:Search.Instance.SearchFocusHotkey}"/>-->

            <FocusHandler Name="FocusChangedUsingKeyboard" Reason="Key" HandlerStage="Bubbled"/>
            <KeyHandler Name="ShowFocusRectF10" Key="F10" Handle="false" HandlerStage="Routed"/>
            <KeyHandler Name="ShowFocusRectApps" Key="Apps" Handle="false" HandlerStage="Routed"/>

            <KeyHandler Name="SpaceKeyHandler" Key="Space" RequiredModifiers="Alt" DisallowedModifiers="Ctrl,Shift,Windows" HandlerStage="Routed,Direct" Repeat="false" />

            <KeyHandler Name="AnyKeys" Key="Any" HandlerStage="Routed" Handle="false"/>
        </Input>


        <Scripts>

            <Script>isui:Shell.DefaultInstance.CommandHandler = ShellCommandHandlers;</Script>


            <Script>
                MouseDown.Command = PopupLayer.MouseDownCommand;
            </Script>


            <!--<Script>
                //isui:IrisPage page = [Shell.CurrentPage];
                isui:IrisPage page = Shell.CurrentPage;
                if (page is isui:CategoryPage)
                {
                    CancelSettings.Command = ((isui:CategoryPage) page).CancelButton;
                }
                else
                {
                    CancelSettings.Command = null;
                }
            </Script>-->


            <Script>
                //bool modalPopup = [PopupLayer.IsModal];
                //bool backArrow = [Shell.CurrentPage.ShowBackArrow];
                //bool computerIcon = ([Shell.CurrentPage.ShowComputerIcon] != isui:ComputerIconState.Hide);
                //bool nowPlayingX = [Shell.CurrentPage.ShowNowPlayingX];

                bool modalPopup = PopupLayer.IsModal;
                bool backArrow = Shell.CurrentPage.ShowBackArrow;


                CanGoBack = !modalPopup &amp;&amp; backArrow;
            </Script>



            <Script>
                ResizeBorders.Visible = (!iris:Application.Window.ShowWindowFrame) &amp;&amp;
                    //([iris:Application.Window.WindowState] != iris:WindowState.Maximized);
                    (iris:Application.Window.WindowState != iris:WindowState.Maximized);
            </Script>

            <Script>
                if (iris:Application.Window.WindowState == iris:WindowState.Maximized)
                {
                    EnergyBar.LayoutInput = EnergyBarLayoutMax;
                    Grabber.Visible = false;
                }
                else
                {
                    Grabber.Visible = true;
                    EnergyBar.LayoutInput = EnergyBarLayoutNorm;
                }
            </Script>


            <Script>
                AutoHideToolbars = Shell.CurrentPage.AutoHideToolbars &amp;&amp; WindowState.CanHideMouse;

                iris:Application.Window.HideMouseOnIdle = AutoHideToolbars;
            </Script>


            <Script>
                iris:Application.Window.MouseIdleTimeout = MouseActivityTimeout;
            </Script>


            <Script>
                [DeclareTrigger(Shell.CurrentPage)]
                WindowState.PageInputActivity = false;
            </Script>


            <Script>
                bool hideNow = AutoHideToolbars &amp;&amp;
                    !iris:Application.Window.MouseActive &amp;&amp;
                    !WindowState.KeysActive;



                TopToolbar.InvisibleMode    = hideNow;
                //BottomToolbar.InvisibleMode = hideNow;




                FocusRect.Alpha = (float)!hideNow;
                AnyKeys.StopRoute = hideNow;

                istyles:WindowState.InputActive = !hideNow;
            </Script>

            <Script>
                [DeclareTrigger(AnyKeys.Pressing)]
                WindowState.KeysActive = true;
                KeyIdleTimer.Stop();
                KeyIdleTimer.Start();
            </Script>

            <Script>
                [DeclareTrigger(KeyIdleTimer.Tick)]
                WindowState.KeysActive = false;
            </Script>


            <Script>
                SpaceKeyHandler.Command = TopToolbar.MenuCommand;
            </Script>


            <Script>
                [DeclareTrigger(KeyHandlerHelp.Invoked)]

                string helpPath = "Help\\" + isui:Shell.LoadString(&quot;IDS_ZUNECLIENT_LOCALE&quot;) + "\\LandingPage.htm";
                isui:Shell.DefaultInstance.Execute(helpPath, null);
            </Script>


            <Script>
                [DeclareTrigger(FocusChangedUsingKeyboard.GainedFocus)]
                [DeclareTrigger(ShowFocusRectF10.Invoked)]
                [DeclareTrigger(ShowFocusRectApps.Invoked)]
                FocusRect.Visible = true;
            </Script>


            <Script>
                if (!iris:Application.Window.Active)// || !isui:PopupManager.Instance.AnyDialogs)
                {
                    FocusRect.Visible = false;
                }
            </Script>

            <Script>
                MainBackground.Visible = Shell.CurrentPage.ShowAppBackground;
            </Script>

            <Script>
                MainBackground.Content = new Image(Shell.BackgroundImage, istyles:Styles.BackgroundMargins);
            </Script>

        </Scripts>

        <Content>
            <Panel Layout="Anchor">
                <Children>

                    <focus:FocusRect Name="FocusRect" Visible="false">
                        <LayoutInput>
                            <AnchorLayoutInput Left="Focus,0,-1" Right="Focus,1,1" Top="Focus,0,-1" Bottom="Focus,1,1" ContributesToHeight="false" ContributesToWidth="false"/>
                        </LayoutInput>
                    </focus:FocusRect>

                    <nonclient:WindowResizeBorderLayer Name="ResizeBorders" Layout="Default"/>

                    <popuplayer:PopupLayer Name="PopupLayer" Layout="Default"/>


                    <Graphic Name="Grabber" Content="{istyles:Styles.Grabber}" MaximumSize="9,6" Layout="Default">
                        <LayoutInput>
                            <AnchorLayoutInput Name="GrabberLayout" Bottom="Parent,1" Right="Parent,1,-1"/>
                        </LayoutInput>
                    </Graphic>

                    <Graphic Name="EnergyBar" Content="{styles:Styles.EnergyBar}" MaximumSize="0,6" Layout="Default" Visible="true" Margins="1,0,0,0"/>


                    <Panel Layout="Anchor" Navigation="RememberFocus,ContainAll,WrapTabOrder" FocusOrder="0">
                        <Children>
                            <Panel Layout="Dock">
                                <Children>


                                    <toptoolbar:TopToolbar Name="TopToolbar" Shell="{Shell}" LayoutInput="{DockLayoutInput.Top}" FocusOrder="1"/>


                                    <!--<bottomtoolbar:BottomToolbar Name="BottomToolbar" Shell="{Shell}" FocusOrder="4">
                                        <LayoutInput>Bottom</LayoutInput>
                                    </bottomtoolbar:BottomToolbar>-->
                                    <Panel LayoutInput="{DockLayoutInput.Bottom}">
                                        <Children>
                                            <Text WordWrap="true" Content="Bottom toolbar!" />
                                        </Children>
                                    </Panel>



                                    <page:PageBase Name="ForegroundUI" Shell="{Shell}" Page="{Shell.CurrentPage}" FocusOrder="2"
                                                   Margins="{istyles:Styles.FrameMargins}" LayoutInput="{DockLayoutInput.Client}">
                                    </page:PageBase>

                                </Children>
                            </Panel>


                            <page:PageBase Name="BackgroundUI" Shell="{Shell}" Page="{Shell.CurrentPage}" FocusOrder="3" Layout="Default"/>

                        </Children>
                    </Panel>

                    <Graphic
                      Name="MainBackground"
                      Layout="Default"
                      ErrorImage="{istyles:Styles.DefaultBackgroundImage}">


                        <Animations>
                            <Animation Animation="{ianim:Animations.MainBackgroundPageTransitionHide}"/>
                        </Animations>
                    </Graphic>

                </Children>
            </Panel>
        </Content>
    </UI>

</UIX>
